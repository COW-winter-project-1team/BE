plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
}

ext {
    springCloudVersion = "2024.0.0"
}

group = 'project'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

allprojects {
    repositories {
        maven { url 'https://jitpack.io' }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.security:spring-security-crypto:5.7.1'
    implementation 'org.testcontainers:testcontainers:1.19.0'
    implementation 'org.testcontainers:mysql:1.19.0'
    implementation "org.springframework.boot:spring-boot-configuration-processor"
    //spotify
    implementation 'se.michaelthelin.spotify:spotify-web-api-java:9.1.0'
    implementation 'com.github.thelinmichael:spotify-web-api-java:master-SNAPSHOT'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    //swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'org.springframework.boot:spring-boot-docker-compose'

    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
jar {
    enabled = false
}
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}